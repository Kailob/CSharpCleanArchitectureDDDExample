// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.DeviceAggregate.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Devices", (string)null);
                });

            modelBuilder.Entity("Domain.DeviceAggregate.Device", b =>
                {
                    b.OwnsMany("Domain.DeviceAggregate.Entities.Camera", "Cameras", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("CameraId");

                            b1.Property<DateTime>("CreatedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)");

                            b1.Property<Guid>("DeviceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<DateTime>("UpdatedDateTime")
                                .HasColumnType("datetime2");

                            b1.HasKey("Id");

                            b1.HasIndex("DeviceId");

                            b1.ToTable("Cameras", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DeviceId");
                        });

                    b.OwnsMany("Domain.DeviceAggregate.Entities.Deploy", "Deploys", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DeviceDeployId");

                            b1.Property<DateTime>("CreatedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("DeviceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("ExecutionStatus")
                                .HasColumnType("int");

                            b1.Property<string>("Manifest")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("DeviceId");

                            b1.ToTable("DeviceDeploys", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DeviceId");
                        });

                    b.OwnsMany("Domain.DeviceAggregate.Entities.DeviceModule", "DeviceModules", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DeviceModuleId");

                            b1.Property<DateTime>("CreatedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("DeviceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ModuleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("UpdatedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Variables")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("DeviceId");

                            b1.ToTable("DeviceModules", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DeviceId");
                        });

                    b.OwnsOne("Domain.DeviceAggregate.Entities.IoTDevice", "IoTDevice", b1 =>
                        {
                            b1.Property<Guid>("DeviceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(17)
                                .HasColumnType("nvarchar(17)")
                                .HasColumnName("IoTDeviceName");

                            b1.HasKey("DeviceId");

                            b1.ToTable("Devices");

                            b1.WithOwner()
                                .HasForeignKey("DeviceId");
                        });

                    b.OwnsOne("Domain.DeviceAggregate.Entities.MetaData", "MetaData", b1 =>
                        {
                            b1.Property<Guid>("DeviceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("IpAddress")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("IpAddress");

                            b1.Property<int>("LinuxOS")
                                .HasColumnType("int")
                                .HasColumnName("LinuxOS");

                            b1.Property<string>("MacAddress")
                                .IsRequired()
                                .HasMaxLength(17)
                                .HasColumnType("nvarchar(17)")
                                .HasColumnName("MacAddress");

                            b1.Property<string>("Password")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Password");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Username");

                            b1.HasKey("DeviceId");

                            b1.ToTable("Devices");

                            b1.WithOwner()
                                .HasForeignKey("DeviceId");
                        });

                    b.OwnsMany("Domain.DeviceAggregate.Entities.Software", "SoftwareInstallations", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DeviceSoftwareId");

                            b1.Property<DateTime>("CreatedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("DeviceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("ExecutionStatus")
                                .HasColumnType("int");

                            b1.Property<string>("Log")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("UpdatedDateTime")
                                .HasColumnType("datetime2");

                            b1.HasKey("Id");

                            b1.HasIndex("DeviceId");

                            b1.ToTable("DeviceSoftware", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DeviceId");
                        });

                    b.Navigation("Cameras");

                    b.Navigation("Deploys");

                    b.Navigation("DeviceModules");

                    b.Navigation("IoTDevice")
                        .IsRequired();

                    b.Navigation("MetaData")
                        .IsRequired();

                    b.Navigation("SoftwareInstallations");
                });
#pragma warning restore 612, 618
        }
    }
}
